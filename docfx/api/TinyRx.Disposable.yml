### YamlMime:ManagedReference
items:
- uid: TinyRx.Disposable
  commentId: T:TinyRx.Disposable
  id: Disposable
  parent: TinyRx
  children:
  - TinyRx.Disposable.Create(System.Action)
  - TinyRx.Disposable.CreateWithState``1(``0,System.Action{``0})
  - TinyRx.Disposable.Empty
  langs:
  - csharp
  - vb
  name: Disposable
  nameWithType: Disposable
  fullName: TinyRx.Disposable
  type: Class
  source:
    remote:
      path: Assets/TinyRx/Disposables/Disposable.cs
      branch: feature/add-docfx-documentation
      repo: https://github.com/nitou-kanazawa/lib-dotnet-TinyRx.git
    id: Disposable
    path: ../Assets/TinyRx/Disposables/Disposable.cs
    startLine: 4
  assemblies:
  - TinyRx
  namespace: TinyRx
  syntax:
    content: public static class Disposable
    content.vb: Public Module Disposable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyRx.Disposable.Empty
  commentId: F:TinyRx.Disposable.Empty
  id: Empty
  parent: TinyRx.Disposable
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Disposable.Empty
  fullName: TinyRx.Disposable.Empty
  type: Field
  source:
    remote:
      path: Assets/TinyRx/Disposables/Disposable.cs
      branch: feature/add-docfx-documentation
      repo: https://github.com/nitou-kanazawa/lib-dotnet-TinyRx.git
    id: Empty
    path: ../Assets/TinyRx/Disposables/Disposable.cs
    startLine: 5
  assemblies:
  - TinyRx
  namespace: TinyRx
  syntax:
    content: public static readonly IDisposable Empty
    return:
      type: System.IDisposable
    content.vb: Public Shared ReadOnly Empty As IDisposable
- uid: TinyRx.Disposable.Create(System.Action)
  commentId: M:TinyRx.Disposable.Create(System.Action)
  id: Create(System.Action)
  parent: TinyRx.Disposable
  langs:
  - csharp
  - vb
  name: Create(Action)
  nameWithType: Disposable.Create(Action)
  fullName: TinyRx.Disposable.Create(System.Action)
  type: Method
  source:
    remote:
      path: Assets/TinyRx/Disposables/Disposable.cs
      branch: feature/add-docfx-documentation
      repo: https://github.com/nitou-kanazawa/lib-dotnet-TinyRx.git
    id: Create
    path: ../Assets/TinyRx/Disposables/Disposable.cs
    startLine: 7
  assemblies:
  - TinyRx
  namespace: TinyRx
  syntax:
    content: public static IDisposable Create(Action disposeAction)
    parameters:
    - id: disposeAction
      type: System.Action
    return:
      type: System.IDisposable
    content.vb: Public Shared Function Create(disposeAction As Action) As IDisposable
  overload: TinyRx.Disposable.Create*
- uid: TinyRx.Disposable.CreateWithState``1(``0,System.Action{``0})
  commentId: M:TinyRx.Disposable.CreateWithState``1(``0,System.Action{``0})
  id: CreateWithState``1(``0,System.Action{``0})
  parent: TinyRx.Disposable
  langs:
  - csharp
  - vb
  name: CreateWithState<TState>(TState, Action<TState>)
  nameWithType: Disposable.CreateWithState<TState>(TState, Action<TState>)
  fullName: TinyRx.Disposable.CreateWithState<TState>(TState, System.Action<TState>)
  type: Method
  source:
    remote:
      path: Assets/TinyRx/Disposables/Disposable.cs
      branch: feature/add-docfx-documentation
      repo: https://github.com/nitou-kanazawa/lib-dotnet-TinyRx.git
    id: CreateWithState
    path: ../Assets/TinyRx/Disposables/Disposable.cs
    startLine: 11
  assemblies:
  - TinyRx
  namespace: TinyRx
  syntax:
    content: public static IDisposable CreateWithState<TState>(TState state, Action<TState> disposeAction)
    parameters:
    - id: state
      type: '{TState}'
    - id: disposeAction
      type: System.Action{{TState}}
    typeParameters:
    - id: TState
    return:
      type: System.IDisposable
    content.vb: Public Shared Function CreateWithState(Of TState)(state As TState, disposeAction As Action(Of TState)) As IDisposable
  overload: TinyRx.Disposable.CreateWithState*
  nameWithType.vb: Disposable.CreateWithState(Of TState)(TState, Action(Of TState))
  fullName.vb: TinyRx.Disposable.CreateWithState(Of TState)(TState, System.Action(Of TState))
  name.vb: CreateWithState(Of TState)(TState, Action(Of TState))
references:
- uid: TinyRx
  commentId: N:TinyRx
  href: TinyRx.html
  name: TinyRx
  nameWithType: TinyRx
  fullName: TinyRx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: TinyRx.Disposable.Create*
  commentId: Overload:TinyRx.Disposable.Create
  href: TinyRx.Disposable.html#TinyRx_Disposable_Create_System_Action_
  name: Create
  nameWithType: Disposable.Create
  fullName: TinyRx.Disposable.Create
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyRx.Disposable.CreateWithState*
  commentId: Overload:TinyRx.Disposable.CreateWithState
  href: TinyRx.Disposable.html#TinyRx_Disposable_CreateWithState__1___0_System_Action___0__
  name: CreateWithState
  nameWithType: Disposable.CreateWithState
  fullName: TinyRx.Disposable.CreateWithState
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Action{{TState}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<TState>
  nameWithType: Action<TState>
  fullName: System.Action<TState>
  nameWithType.vb: Action(Of TState)
  fullName.vb: System.Action(Of TState)
  name.vb: Action(Of TState)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: TState
  commentId: '!:TState'
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
